#compdef lnpd

autoload -U is-at-least

_lnpd() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-k+[Node key file]:KEY_FILE:_files' \
'--key-file=[Node key file]:KEY_FILE:_files' \
'-d+[Data directory path]:DATA_DIR:_files -/' \
'--data-dir=[Data directory path]:DATA_DIR:_files -/' \
'-c+[Path for the configuration file]:CONFIG:_files' \
'--config=[Path for the configuration file]:CONFIG:_files' \
'-T+[Use Tor]:TOR_PROXY:_hosts' \
'--tor-proxy=[Use Tor]:TOR_PROXY:_hosts' \
'-M+[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'--msg=[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'-X+[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'--ctl=[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'-R+[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'--rpc=[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'-n+[Blockchain to use]:CHAIN: ' \
'--chain=[Blockchain to use]:CHAIN: ' \
'--electrum-server=[Electrum server to use]:ELECTRUM_SERVER:_hosts' \
'--electrum-port=[Customize Electrum server port number. By default the wallet will use port matching the selected network]:ELECTRUM_PORT: ' \
'-L+[Start daemon in listening mode binding the provided local address]:LISTEN:_hosts' \
'--listen=[Start daemon in listening mode binding the provided local address]:LISTEN:_hosts' \
'-p+[Customize port used by BOLT or Bifrost lightning peer network]:PORT: ' \
'--port=[Customize port used by BOLT or Bifrost lightning peer network]:PORT: ' \
'-h[Print help information]' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'-t[Spawn daemons as threads and not processes]' \
'--threaded[Spawn daemons as threads and not processes]' \
'(--bifrost)--bolt[Use BOLT protocol for listening for the incoming connections]' \
'--bifrost[Use Bifrost protocol for listening for the incoming connections]' \
":: :_lnpd_commands" \
"*::: :->lnpd" \
&& ret=0
    case $state in
    (lnpd)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:lnpd-command-$line[1]:"
        case $line[1] in
            (init)
_arguments "${_arguments_options[@]}" \
'-d+[Data directory path]:DATA_DIR:_files -/' \
'--data-dir=[Data directory path]:DATA_DIR:_files -/' \
'-c+[Path for the configuration file]:CONFIG:_files' \
'--config=[Path for the configuration file]:CONFIG:_files' \
'-T+[Use Tor]:TOR_PROXY:_hosts' \
'--tor-proxy=[Use Tor]:TOR_PROXY:_hosts' \
'-M+[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'--msg=[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'-X+[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'--ctl=[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'-R+[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'--rpc=[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'-n+[Blockchain to use]:CHAIN: ' \
'--chain=[Blockchain to use]:CHAIN: ' \
'--electrum-server=[Electrum server to use]:ELECTRUM_SERVER:_hosts' \
'--electrum-port=[Customize Electrum server port number. By default the wallet will use port matching the selected network]:ELECTRUM_PORT: ' \
'-h[Print help information]' \
'--help[Print help information]' \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'-d+[Data directory path]:DATA_DIR:_files -/' \
'--data-dir=[Data directory path]:DATA_DIR:_files -/' \
'-c+[Path for the configuration file]:CONFIG:_files' \
'--config=[Path for the configuration file]:CONFIG:_files' \
'-T+[Use Tor]:TOR_PROXY:_hosts' \
'--tor-proxy=[Use Tor]:TOR_PROXY:_hosts' \
'-M+[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'--msg=[ZMQ socket for peer message bus used to communicate with LNP node peerd service]:MSG_ENDPOINT:_files' \
'-X+[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'--ctl=[ZMQ socket for internal service control bus]:CTL_ENDPOINT:_files' \
'-R+[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'--rpc=[ZMQ socket for LNP Node client-server RPC API]:RPC_ENDPOINT: ' \
'-n+[Blockchain to use]:CHAIN: ' \
'--chain=[Blockchain to use]:CHAIN: ' \
'--electrum-server=[Electrum server to use]:ELECTRUM_SERVER:_hosts' \
'--electrum-port=[Customize Electrum server port number. By default the wallet will use port matching the selected network]:ELECTRUM_PORT: ' \
'*-v[Set verbosity level]' \
'*--verbose[Set verbosity level]' \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_lnpd_commands] )) ||
_lnpd_commands() {
    local commands; commands=(
'init:Initialize data directory' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'lnpd commands' commands "$@"
}
(( $+functions[_lnpd__help_commands] )) ||
_lnpd__help_commands() {
    local commands; commands=()
    _describe -t commands 'lnpd help commands' commands "$@"
}
(( $+functions[_lnpd__init_commands] )) ||
_lnpd__init_commands() {
    local commands; commands=()
    _describe -t commands 'lnpd init commands' commands "$@"
}

_lnpd "$@"
