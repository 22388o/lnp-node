[workspace]
default-members = [".", "rpc", "cli"]
members = [".", "rpc", "cli"]

[package]
name = "lnp_node"
description = "LNP node"
version = "0.6.0-beta.1"
authors = ["Dr. Maxim Orlovsky <orlovsky@pandoracore.com>"]
license = "MIT"
keywords = ["bitcoin", "bifi", "lightning-network", "smart-contracts", "lnp"]
edition = "2018"
readme = "README.md"
build = "build.rs"
exclude = [".github", "Dockerfile", ".dockerignore", "cli", "rpc", "shell", "contrib", "doc"]

[lib]
name = "lnp_node"

[[bin]]
name = "lnpd"
required-features = ["server"]

[[bin]]
name = "peerd"
required-features = ["server"]

[[bin]]
name = "watchd"
required-features = ["server"]

[[bin]]
name = "routed"
required-features = ["server"]

[[bin]]
name = "channeld"
required-features = ["server"]

[[bin]]
name = "signd"
required-features = ["server"]

[dependencies]
# LNP/BP crates
amplify = "3.9.1"
strict_encoding = "1.7.5"
descriptor-wallet = { version = "0.5.0", features = ["keygen"] }
# >>> Remove from here all crates upon descriptor-wallet 0.6 release
psbt = { version = "0.6.0-alpha.11", features = ["sign"] }
descriptors = "0.6.0-alpha.1"
bitcoin_onchain = { version = "0.6.0-alpha.4", features = ["electrum"] }
bitcoin_hd = "0.6.0-alpha.2"
slip132 = "0.5.0"
# <<<
lnpbp = "0.5.0"
bp-core = "0.5.0"
lnp-core = { version = "0.6.0-beta.1", git = "https://github.com/LNP-BP/lnp-core" }
lnp_rpc = { version = "0.6.0-beta.1", path = "./rpc" }
internet2 = { version = "0.5.12", features = ["keygen", "url"] }
microservices = { version = "0.6.0-beta.2", git = "https://github.com/internet2-org/rust-microservices", default-features = false, features = ["node", "peer"] }
# Bitcoin
bitcoin = { version = "0.27.1", features = ["rand"] }
miniscript = "6.0.1"
electrum-client = "0.8"
lightning-invoice = "0.13.0"
# OS
chrono = "0.4"
nix = "0.19"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
env_logger = "0.7"
clap = { version = "=3.0.0-rc.7", optional = true, features = ["env", "derive"] }
settings = { version = "0.10", package = "config", optional = true }
configure_me = { version = "0.4", optional = true }
dotenv = { version = "0.15", optional = true }
colored = { version = "2", optional = true }
shellexpand = { version = "2", optional = true }
rpassword = { version = "5.0.1", optional = true }
# IPC
zmq = "0.9.2"

[dev-dependencies]
strict_encoding_test = "1.7.4"

[build-dependencies]
amplify = "3.9.1"
lnpbp = "0.5.0"
bitcoin = "0.27.1"
lightning-invoice = "0.13.0"
lnp-core = { version = "0.6.0-beta.1", git = "https://github.com/LNP-BP/lnp-core" }
lnp_rpc = { version = "0.6.0-beta.1", path = "./rpc" }
internet2 = "0.5.12"
microservices = { version = "0.6.0-beta.1", git = "https://github.com/internet2-org/rust-microservices", default-features = false, features = ["peer"] }
clap = { version = "3.0.0-rc.7", features = ["env"] }
clap_generate = "3.0.0-beta.4"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
shellexpand = "2"
configure_me_codegen = "0.4"

# Recommended set of features:
# 1. Standalone node: `server` (=`node`+`shell`)
# 2. Cli to remote node: `cli` (auto includes `shell` and `integration`)
# 3. Mobile app talking to a server: `client`
# 4. Mobile app with embedded node: `embedded` (auto includes `client` + `node`)
# 5. Simple cli utility app: `shell`
[features]
default = ["server"]
all = ["server", "tor"] # "rgb"

# Server is a standalone application that runs daemons.
# Required for all apps that can be launched from command-line shell as binaries
# (i.e. both servers and cli)
server = ["microservices/server", "dotenv", "clap", "settings", "configure_me",
          "amplify/parse_arg", "shellexpand", "colored", "rpassword"]
# Embedded is an app that contains embedded node and that talks to it through
# integration layer
embedded = ["microservices/embedded"]

# rgb = ["lnp-core/rgb", "rgb-core", "rgb_node"]
tor = ["microservices/tor", "internet2/tor"] #, "rgb_node/tor"]

[package.metadata.configure_me]
spec = "config_spec.toml"
